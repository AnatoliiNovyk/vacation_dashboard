#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π –¥–æ–¥–∞—Ç–∫—É
"""

import sys
import os
sys.path.append('/opt/vacation-dashboard')

def test_imports():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ–º–ø–æ—Ä—Ç—ñ–≤"""
    try:
        print("Testing imports...")
        import app
        import data.db_operations as db_ops
        import utils.date_utils as date_utils
        print("‚úÖ All imports successful")
        return True
    except Exception as e:
        print(f"‚ùå Import error: {e}")
        return False

def test_database():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    try:
        print("Testing database...")
        import data.db_operations as db_ops
        
        # –¢–µ—Å—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
        conn = db_ops.get_db_connection()
        conn.close()
        print("‚úÖ Database connection successful")
        
        # –¢–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å
        db_ops._ensure_tables_exist()
        print("‚úÖ Tables creation successful")
        
        # –¢–µ—Å—Ç –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤
        employees = db_ops.get_all_employees()
        print(f"‚úÖ Retrieved {len(employees)} employees")
        
        return True
    except Exception as e:
        print(f"‚ùå Database error: {e}")
        return False

def test_date_utils():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —É—Ç–∏–ª—ñ—Ç –¥–∞—Ç"""
    try:
        print("Testing date utilities...")
        import utils.date_utils as date_utils
        
        days = date_utils.calculate_days('2024-01-01', '2024-01-10')
        if days == 10:
            print("‚úÖ Date calculation successful")
            return True
        else:
            print(f"‚ùå Date calculation error: expected 10, got {days}")
            return False
    except Exception as e:
        print(f"‚ùå Date utils error: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"""
    print("üß™ Starting application tests...")
    print("-" * 50)
    
    tests = [
        ("Imports", test_imports),
        ("Database", test_database),
        ("Date Utils", test_date_utils)
    ]
    
    passed = 0
    total = len(tests)
    
    for name, test_func in tests:
        print(f"\nüîç Testing {name}...")
        if test_func():
            passed += 1
        print("-" * 30)
    
    print(f"\nüìä Test Results: {passed}/{total} passed")
    
    if passed == total:
        print("üéâ All tests passed!")
        sys.exit(0)
    else:
        print("‚ùå Some tests failed!")
        sys.exit(1)

if __name__ == "__main__":
    main()